/*
 * Femsa API
 * Femsa sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@femsa.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.digitalfemsa;

import com.digitalfemsa.*;
import com.digitalfemsa.auth.*;
import com.digitalfemsa.model.Checkout;
import com.digitalfemsa.model.CheckoutResponse;
import com.digitalfemsa.model.CheckoutsResponse;
import com.digitalfemsa.model.EmailCheckoutRequest;
import com.digitalfemsa.model.Error;
import com.digitalfemsa.model.SmsCheckoutRequest;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PaymentLinkApi
 */
public class PaymentLinkApiTest {

    private final PaymentLinkApi api = new PaymentLinkApi();

    /**
     * Cancel Payment Link
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelCheckoutTest() throws ApiException {
        //String id = null;
        //String acceptLanguage = null;
        //String xChildCompanyId = null;
        //CheckoutResponse response = api.cancelCheckout(id, acceptLanguage, xChildCompanyId);
        // TODO: test validations
    }

    /**
     * Create Unique Payment Link
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCheckoutTest() throws ApiException {
        //Checkout checkout = null;
        //String acceptLanguage = null;
        //String xChildCompanyId = null;
        //CheckoutResponse response = api.createCheckout(checkout, acceptLanguage, xChildCompanyId);
        // TODO: test validations
    }

    /**
     * Send an email
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void emailCheckoutTest() throws ApiException {
        //String id = null;
        //EmailCheckoutRequest emailCheckoutRequest = null;
        //String acceptLanguage = null;
        //String xChildCompanyId = null;
        //CheckoutResponse response = api.emailCheckout(id, emailCheckoutRequest, acceptLanguage, xChildCompanyId);
        // TODO: test validations
    }

    /**
     * Get a payment link by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCheckoutTest() throws ApiException {
        //String id = null;
        //String acceptLanguage = null;
        //String xChildCompanyId = null;
        //CheckoutResponse response = api.getCheckout(id, acceptLanguage, xChildCompanyId);
        // TODO: test validations
    }

    /**
     * Get a list of payment links
     *
     * Returns a list of links generated by the merchant
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCheckoutsTest() throws ApiException {
        //String acceptLanguage = null;
        //String xChildCompanyId = null;
        //Integer limit = null;
        //String search = null;
        //String next = null;
        //String previous = null;
        //CheckoutsResponse response = api.getCheckouts(acceptLanguage, xChildCompanyId, limit, search, next, previous);
        // TODO: test validations
    }

    /**
     * Send an sms
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void smsCheckoutTest() throws ApiException {
        //String id = null;
        //SmsCheckoutRequest smsCheckoutRequest = null;
        //String acceptLanguage = null;
        //String xChildCompanyId = null;
        //CheckoutResponse response = api.smsCheckout(id, smsCheckoutRequest, acceptLanguage, xChildCompanyId);
        // TODO: test validations
    }

}
