/*
 * Femsa API
 * Femsa sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@femsa.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.digitalfemsa;

import com.digitalfemsa.*;
import com.digitalfemsa.auth.*;
import com.digitalfemsa.model.Error;
import com.digitalfemsa.model.GetWebhooksResponse;
import com.digitalfemsa.model.WebhookRequest;
import com.digitalfemsa.model.WebhookResponse;
import com.digitalfemsa.model.WebhookUpdateRequest;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebhooksApi
 */
public class WebhooksApiTest {

    private final WebhooksApi api = new WebhooksApi();

    /**
     * Create Webhook
     *
     * What we do at Femsa translates into events. For example, an event of interest to us occurs at the time a payment is successfully processed. At that moment we will be interested in doing several things: Send an email to the buyer, generate an invoice, start the process of shipping the product, etc.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWebhookTest() throws ApiException {
        //WebhookRequest webhookRequest = null;
        //String acceptLanguage = null;
        //WebhookResponse response = api.createWebhook(webhookRequest, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Delete Webhook
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteWebhookTest() throws ApiException {
        //String id = null;
        //String acceptLanguage = null;
        //WebhookResponse response = api.deleteWebhook(id, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Get Webhook
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWebhookTest() throws ApiException {
        //String id = null;
        //String acceptLanguage = null;
        //String xChildCompanyId = null;
        //WebhookResponse response = api.getWebhook(id, acceptLanguage, xChildCompanyId);
        // TODO: test validations
    }

    /**
     * Get List of Webhooks
     *
     * Consume the list of webhooks you have, each environment supports 10 webhooks (For production and testing)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWebhooksTest() throws ApiException {
        //String acceptLanguage = null;
        //String xChildCompanyId = null;
        //Integer limit = null;
        //String search = null;
        //String next = null;
        //String previous = null;
        //GetWebhooksResponse response = api.getWebhooks(acceptLanguage, xChildCompanyId, limit, search, next, previous);
        // TODO: test validations
    }

    /**
     * Test Webhook
     *
     * Send a webhook.ping event
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void testWebhookTest() throws ApiException {
        //String id = null;
        //String acceptLanguage = null;
        //WebhookResponse response = api.testWebhook(id, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Update Webhook
     *
     * updates an existing webhook
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWebhookTest() throws ApiException {
        //String id = null;
        //WebhookUpdateRequest webhookUpdateRequest = null;
        //String acceptLanguage = null;
        //String xChildCompanyId = null;
        //WebhookResponse response = api.updateWebhook(id, webhookUpdateRequest, acceptLanguage, xChildCompanyId);
        // TODO: test validations
    }

}
